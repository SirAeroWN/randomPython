# This program solves Eulers problem 2
## Find the sum of the even valued terms in the Fibonacci sequence starting with 1 and under 4 million, inclusive

# First let's explain what the Fibonacci sequence is:
## Each new term in the sequence is generated by adding the previous two

# So, we'll need to calculate the terms in the fibonacci sequence and add up any that are even
## first we'll work on calculating the fibonacci sequence

twoOld = 1						# we're starting with 1
old = 2							# and 2
curr = 2						# the curr variable keeps track of the newest term, it's set to 2 because 2 is in the sequence and needs to be checked and added
acc = 0							# our accumulator

while curr <= 4000000:			# only checking up to 4 million;; not sure how many terms are in the fibonacci sequence under 4 mil but this avoids needing to know
	if curr % 2 == 0:			# remember that even = 2k, so if mod 2 = 0 then even
		acc += curr

	curr = twoOld + old 		# getting new term in sequence
	twoOld = old 				# shifting values
	old = curr

print(acc)						# display accumulator